void SigQuitHandler(int signum);
void filar_reset(int occ);
void filar_reset_hola(int occ,  int channel_mask);
int filar_map(int occ);
int filar_unmap(int occ);
unsigned * filar_getbuffer(int occ, int chan);
unsigned * filar_getbuffer_4(int occ, int l2buff);
int filar_setreq(int occ, int channel, int number);
int filar_init(int occ);
int filar_exit(int occ);
int filar_getbuf(int occ, int channel, int mode);
int filar_retbuf(int occ, int channel, int mode);
int filar_cardreset(int occ);
int filar_linkreset(int occ);
int filar_linkreset_hola(int occ, int chan);
int filar_receive(int occ, int* filar_err);
int filar_receive_nonblock(int occ, int* filar_err);
int filar_receive_nonblock_4(int occ, int l2buff, int* filar_err);
int filar_conf(int occ);
void filar_setup(int occ);
void filar_setup_hola(int occ, int channel_mask);
int filar_read( int occ, int* );
int filar_read_init( int occ, int* );
int filar_receive_channel( int occ, int* filar_err, int chan );
int filar_receive_channel_ptr( int occ, int* filar_err, int chan, unsigned* userptr);
unsigned *filar_receive_channel_ptr_ncpy( int occ, int* filar_err, int chan, int *fsize);
unsigned int filar_receive_all( int occ);
